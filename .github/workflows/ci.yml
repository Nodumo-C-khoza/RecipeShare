name: CI/CD Pipeline

# Trigger the workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Run Benchmarks
      run: |
        cd RecipeShare/RecipeShareBenchmarks
        dotnet run -c Release
    
    - name: Publish
      run: dotnet publish -c Release -o ${{ github.workspace }}/publish

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: publish
        path: ${{ github.workspace }}/publish

  # .NET Backend Job
  backend:
    runs-on: ubuntu-latest
    name: Build and Test .NET API

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./RecipeShare

    - name: Build
      run: dotnet build --no-restore --configuration Release
      working-directory: ./RecipeShare

    - name: Run NUnit tests
      run: |
        dotnet test ./RecipeShareTests/RecipeShareTests.csproj --no-build --configuration Release --verbosity normal --logger trx --collect:"XPlat Code Coverage"
        dotnet test ./RecipeShareAPI/RecipeShareAPI.csproj --no-build --configuration Release --verbosity normal --logger trx --collect:"XPlat Code Coverage"
      working-directory: ./RecipeShare

    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: .NET Tests
        path: '**/*.trx'
        reporter: dotnet-trx

    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      if: success() || failure()
      with:
        files: '**/coverage.cobertura.xml'

  # Angular Frontend Job
  frontend:
    runs-on: ubuntu-latest
    name: Build and Test Angular App

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './RecipeShareAngularApp/RecipeShare/package-lock.json'

    - name: Install dependencies
      run: npm ci
      working-directory: ./RecipeShareAngularApp/RecipeShare

    - name: Lint
      run: npm run lint
      working-directory: ./RecipeShareAngularApp/RecipeShare

    - name: Run tests
      run: npm run test -- --watch=false --browsers=ChromeHeadless
      working-directory: ./RecipeShareAngularApp/RecipeShare

    - name: Build
      run: npm run build
      working-directory: ./RecipeShareAngularApp/RecipeShare

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: angular-build
        path: ./RecipeShareAngularApp/RecipeShare/dist/